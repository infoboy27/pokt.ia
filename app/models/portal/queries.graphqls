query blockchains($active: Boolean) {
  blockchains(active: $active) {
    id
    ticker
    blockchain
    blockchainAliases
    active
    description
    enforceResult
    chainIDCheck
    logLimitBlocks
    path
  }
}

query getUserJWT($username: String!, $password: String!) {
  getUserJWT(username: $username, password: $password)
}

query getPortalUserID {
  getPortalUserID
}

query getPortalUser {
  getPortalUser {
    portalUserID
    email
    iconURL
    signedUp
    updatesProduct
    updatesMarketing
    betaTester
  }
}

query getUserAccount(
  $accountID: ID!
  $accepted: Boolean!
  $sortOrder: SortOrder
  $roleNameFilters: [RoleNameV2!]
) {
  getUserAccount(
    accountID: $accountID
    accepted: $accepted
    sortOrder: $sortOrder
    roleNameFilters: $roleNameFilters
  ) {
    id
    name
    planType
    accountUsers {
      accountUserID
      email
      owner
      portalApps {
        portalAppID
        roleName
        accepted
      }
    }
    partnerChainIDs
    partnerThroughputLimit
    partnerAppLimit
    integrations {
      covalentAPIKeyFree
      CovalentAPIKeyPaid
    }
    createdAt
    updatedAt
    deleted
    portalApps {
      id
      name
      accountID
      appEmoji
      description
      settings {
        appID
        environment
        secretKey
        secretKeyRequired
        favoritedChainIDs
        monthlyRelayLimit
      }
      whitelists {
        origins
        userAgents
        blockchains
        contracts {
          blockchainID
          contracts
        }
        methods {
          blockchainID
          methods
        }
      }
      aats {
        protocolAppID
        aat {
          id
          appID
          publicKey
          address
          clientPublicKey
          signature
          version
        }
      }
      notifications {
        notificationType
        appNotification {
          appID
          type
          active
          destination
          trigger
          events {
            full
            half
            quarter
            signedUp
            threeQuarters
          }
        }
      }
      createdAt
      updatedAt
      deleted
    }
    plan {
      id
      type
      chainIDs
      monthlyRelayLimit
      ThroughputLimit
      appLimit
    }
  }
}
query getUserAccounts(
  $sortOrder: SortOrder
  $roleNameFilters: [RoleNameV2!]
  $accepted: Boolean!
) {
  getUserAccounts(
    sortOrder: $sortOrder
    roleNameFilters: $roleNameFilters
    accepted: $accepted
  ) {
    id
    name
    planType
    portalApps {
      id
      name
    }
    accountUsers {
      accountUserID
      owner
    }
  }
}

query getUserPortalApp($portalAppID: ID!) {
  getUserPortalApp(portalAppID: $portalAppID) {
    id
    name
    accountID
    appEmoji
    description
    portalAppUsers {
      portalAppUserID
      email
      roleName
      accepted
    }
    settings {
      appID
      environment
      secretKey
      secretKeyRequired
      favoritedChainIDs
      monthlyRelayLimit
    }
    whitelists {
      origins
      userAgents
      blockchains
      contracts {
        blockchainID
        contracts
      }
      methods {
        blockchainID
        methods
      }
    }
    aats {
      protocolAppID
      aat {
        id
        appID
        publicKey
        address
        clientPublicKey
        signature
        version
      }
    }
    notifications {
      notificationType
      appNotification {
        appID
        type
        active
        destination
        trigger
        events {
          full
          half
          quarter
          signedUp
          threeQuarters
        }
      }
    }
    createdAt
    updatedAt
    deleted
    firstDateSurpassed
    legacyFields {
      planType
      dailyLimit
      customLimit
      requestTimeout
      stripeSubscriptionID
    }
  }
}

query getUserPortalApps(
  $sortOrder: SortOrder
  $roleNameFilters: [RoleNameV2!]
  $accepted: Boolean!
) {
  getUserPortalApps(
    sortOrder: $sortOrder
    roleNameFilters: $roleNameFilters
    accepted: $accepted
  ) {
    id
    name
    accountID
    appEmoji
    description
    portalAppUsers {
      portalAppUserID
      email
      roleName
      accepted
    }
  }
}
