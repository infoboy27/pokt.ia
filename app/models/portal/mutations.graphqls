mutation createEndpoint($name: String!) {
  createNewEndpoint(name: $name) {
    id
  }
}

mutation adminUpdatePayPlanType(
  $endpointID: ID!
  $payPlanType: PayPlanType!
  $customLimit: Int
) {
  adminUpdatePayPlanType(
    endpointID: $endpointID
    payPlanType: $payPlanType
    customLimit: $customLimit
  ) {
    id
  }
}

mutation updateEndpoint($input: UpdateEndpointInput!) {
  updateEndpoint(input: $input) {
    id
  }
}

mutation removeEndpoint($endpointID: ID!) {
  removeEndpoint(endpointID: $endpointID) {
    id
  }
}

mutation createEndpointUser($endpointID: ID!, $input: CreateUserAccessInput!) {
  createEndpointUser(endpointID: $endpointID, input: $input) {
    id
    users {
      roleName
      email
      accepted
    }
  }
}

mutation deleteEndpointUser($endpointID: ID!, $portalUserID: String!) {
  deleteEndpointUser(endpointID: $endpointID, portalUserID: $portalUserID) {
    id
    users {
      roleName
      email
      accepted
    }
  }
}

mutation updateEndpointUserRole($endpointID: ID!, $input: UserAccessInput!) {
  updateEndpointUserRole(endpointID: $endpointID, input: $input) {
    id
    userId
    name
    users {
      roleName
      email
      accepted
    }
  }
}

mutation acceptEndpointUser($endpointID: ID!) {
  acceptEndpointUser(endpointID: $endpointID) {
    users {
      roleName
      email
      accepted
    }
  }
}

mutation adminCreatePortalUser($email: String!, $providerUserID: ID!) {
  adminCreatePortalUser(email: $email, providerUserID: $providerUserID) {
    portalUserID
    email
    iconURL
    signedUp
    updatesProduct
    updatesMarketing
    betaTester
  }
}

mutation updatePortalUser($updateUser: UpdateUser!, $image: Upload) {
  updatePortalUser(updateUser: $updateUser, image: $image) {
    portalUserID
  }
}

mutation createUserPortalApp($input: CreateUserPortalApp!) {
  createUserPortalApp(input: $input) {
    id
    name
    accountID
    settings {
      appID
      environment
      secretKey
      secretKeyRequired
      favoritedChainIDs
      monthlyRelayLimit
    }
    whitelists {
      origins
      userAgents
      blockchains
      contracts {
        blockchainID
        contracts
      }
      methods {
        blockchainID
        methods
      }
    }
    aats {
      protocolAppID
      aat {
        id
        appID
        publicKey
        address
        clientPublicKey
        signature
        version
      }
    }
    notifications {
      notificationType
      appNotification {
        appID
        type
        active
        destination
        trigger
        events {
          full
          half
          quarter
          signedUp
          threeQuarters
        }
      }
    }
    createdAt
    updatedAt
    deleted
    firstDateSurpassed
    legacyFields {
      planType
      dailyLimit
      customLimit
      requestTimeout
    }
  }
}

mutation updateUserPortalApp($input: UpdatePortalApp!) {
  updateUserPortalApp(input: $input) {
    id
    name
    accountID
    settings {
      appID
      environment
      secretKey
      secretKeyRequired
      favoritedChainIDs
      monthlyRelayLimit
    }
    whitelists {
      origins
      userAgents
      blockchains
      contracts {
        blockchainID
        contracts
      }
      methods {
        blockchainID
        methods
      }
    }
    aats {
      protocolAppID
      aat {
        id
        appID
        publicKey
        address
        clientPublicKey
        signature
        version
      }
    }
    notifications {
      notificationType
      appNotification {
        appID
        type
        active
        destination
        trigger
        events {
          full
          half
          quarter
          signedUp
          threeQuarters
        }
      }
    }
    createdAt
    updatedAt
    deleted
    firstDateSurpassed
    legacyFields {
      planType
      dailyLimit
      customLimit
      requestTimeout
    }
  }
}

mutation adminUpdatePortalApp($input: AdminUpdatePortalApp!) {
  adminUpdatePortalApp(input: $input) {
    id
  }
}

mutation updateUserAcceptAccount($portalAppID: String!) {
  updateUserAcceptAccount(portalAppID: $portalAppID)
}
