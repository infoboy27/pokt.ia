services:
  postgres:
    image: postgres:15-alpine
    container_name: pokt-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: pokt_portal
      POSTGRES_USER: pokt_user
      POSTGRES_PASSWORD: pokt_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pokt_user -d pokt_portal"]
      interval: 10s
      timeout: 5s
      retries: 5

  hasura:
    image: hasura/graphql-engine:v2.33.4
    container_name: pokt-hasura
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://pokt_user:pokt_password@postgres:5432/pokt_portal
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: pokt_admin_secret
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS256", "key":"pokt_jwt_secret_key_for_development_only"}'
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      HASURA_GRAPHQL_ENABLE_TELEMETRY: "false"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: pokt-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  pokt-portal:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - SESSION_SECRET=test_session_secret_for_docker_testing_only_make_it_long_and_random_123456789
      - AUTH0_CLIENT_ID=your_auth0_client_id_here
      - AUTH0_CLIENT_SECRET=your_auth0_client_secret_here
      - AUTH0_DOMAIN=your_auth0_domain_here
      - AUTH0_AUDIENCE=your_auth0_audience_here
      - AUTH0_BASE_URL=https://pokt.ai
      - AUTH0_SCOPE=openid profile email
      - AUTH0_CONNECTION=Username-Password-Authentication
      - AUTH0_SECRET=test_auth0_secret_for_development_only
      - AUTH0_ISSUER_BASE_URL=https://your-domain.auth0.com
      - NOVU_APP_IDENTIFIER=your_novu_app_identifier_here
      - PORTAL_API_URL=http://localhost:8080/v1/graphql
      - RELAY_METER_API_URL=http://localhost:3001/mock-meter
      - GOOGLE_ANALYTICS_ID=test_analytics_id
      - FLAG_ENTERPRISE=false
      - FLAG_INFLUX_RELAY_ERROR=false
      - FLAG_LEGACY_MESSAGING=false
      - FLAG_MAINTENANCE_MODE_DASHBOARD=false
      - FLAG_MULTI_LANGUAGE=false
      - FLAG_ANNOUNCEMENT_ALERT=false
      - ANNOUNCEMENT_ALERT_TITLE=test_announcement_title
      - ANNOUNCEMENT_ALERT_BODY=test_announcement_body
      - GODMODE_ACCOUNTS=test_godmode_accounts
      - VERCEL_ENV=development
      - DOCS_STATUS=test_docs_status
      - FLAG_MAINTENANCE_MODE=false
      - FLAG_STRIPE_PAYMENT=false
      - STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key_here
      - STRIPE_WEBHOOK_SECRET=whsec_your_stripe_webhook_secret_here
      - STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key_here
      - STRIPE_PRICE_ID=prod_SmUxO9BbmmrCOL
      - NOVU_API_KEY=your_novu_api_key_here
      - NOVU_APP_ID=your_novu_app_id_here
      - KV_REST_API_URL=redis://redis:6379
      - KV_REST_API_TOKEN=redis_token
      - KV_REST_API_READ_ONLY_TOKEN=redis_readonly_token
      - DATABASE_URL=postgres://pokt_user:pokt_password@postgres:5432/pokt_portal
      - HASURA_GRAPHQL_ENDPOINT=http://localhost:8080/v1/graphql
      - HASURA_GRAPHQL_ADMIN_SECRET=pokt_admin_secret
      - ADMIN_EMAIL=admin@pokt.ai
      - ADMIN_PASSWORD=your_admin_password_here
      - ADMIN_KEY=your_admin_key_here
      - SENTRY_DSN=your_sentry_dsn_here
      - UPSTASH_REDIS_REST_URL=your_upstash_redis_url_here
      - UPSTASH_REDIS_REST_TOKEN=your_upstash_redis_token_here
      - MAILJET_API_KEY=your_mailjet_api_key_here
      - MAILJET_API_SECRET=your_mailjet_api_secret_here
    volumes:
      - ./public:/app/public
    depends_on:
      postgres:
        condition: service_healthy
      hasura:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.poktportal.rule=Host(`pokt.ai`)"
      - "traefik.http.routers.poktportal.entrypoints=websecure"
      - "traefik.http.routers.poktportal.tls.certresolver=https-resolver"
      - "traefik.http.services.poktportal.loadbalancer.server.port=3001"

networks:
  default:
    name: poktia
    external: true

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local 
